name: Auto-Assign when item moved to In Progress

on:
  schedule:
    - cron: "*/5 * * * *"  # Hver 5. minut
  workflow_dispatch:  # Manuel afvikling

jobs:
  assign-on-inprogress:
    runs-on: ubuntu-latest
    steps:
      - name: Find issues in In Progress
        run: |
          PROJECT_ID="PVT_kwHOCwE_ds4A1FKE"
          STATUS_FIELD_ID="PVTSSF_lAHOCwE_ds4A1FKEzgqm73E"
          IN_PROGRESS_OPTION_ID="47fc9ee4"

          read -r -d '' QUERY <<EOF
          query {
            user(login: "Gabel1998") {
              projectV2(number: 3) {
                items(first: 100) {
                  nodes {
                    id
                    content {
                      ... on Issue {
                        id
                        number
                      }
                    }
                    fieldValues(first: 20) {
                      nodes {
                        ... on ProjectV2ItemFieldSingleSelectValue {
                          field {
                            ... on ProjectV2SingleSelectField {
                              id
                              name
                            }
                          }
                          name
                          updatedAt
                          updatedBy {
                            login
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          EOF

          echo "Sending GraphQL query..."
          RESPONSE=$(curl -s -X POST https://api.github.com/graphql \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -nc --arg q \"$QUERY\" '{ "query": $q }')")

          echo "=== Raw GraphQL Response ==="
          echo "$RESPONSE"

          if [[ "$RESPONSE" == *"errors"* ]]; then
            echo "❌ GraphQL returned errors:"
            echo "$RESPONSE"
            exit 1
          fi

          echo "$RESPONSE" > response.json

          jq -r '
            .data.user.projectV2.items.nodes[]? 
            | select(.content != null and .fieldValues != null)
            | {
                issueNumber: .content.number, 
                updatedBy: (
                  .fieldValues.nodes[]? 
                  | select(.field.id == "'$STATUS_FIELD_ID'" and .name == "In progress") 
                  | .updatedBy.login
                )
              }
            | select(.issueNumber != null and .updatedBy != null)
            | "\(.issueNumber) \(.updatedBy)"
          ' response.json > assign_list.txt || {
            echo "❌ Could not extract assign list"
            cat response.json
            exit 1
          }

          if [ ! -s assign_list.txt ]; then
            echo "⚠️ No items to assign."
            exit 0
          fi

          echo "=== Assigning users ==="
          cat assign_list.txt

          while read ISSUE_NUM LOGIN; do
            echo "Assigning $LOGIN to issue #$ISSUE_NUM"
            curl -s -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUM/assignees \
              -d "{\"assignees\": [\"$LOGIN\"]}" || echo "Failed to assign $LOGIN to issue #$ISSUE_NUM"
          done < assign_list.txt
